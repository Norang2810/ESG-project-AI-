1차원형태로 이미지를 변환해야 학습이 변경되기 때문에 추후 이미지를 보존하기 위해
각픽셀마다 위치정보가 부여됨 > 이 위치 정보가 학습에 영향을 줌 > 픽셀의 위치가 달라지면
예측이 제대로 되지 않는다(이미지의 사이즈,객체의 위치)
-픽셀에





-Conv Layer + Pooling Layer
Conv Layer +Conv Layer + Pooling Layer
Conv Layer+Conv Layer+Conv Layer+Pooling Layer

CNN은 어떻께 이미지에서 특징을 추출할까?
-입력된 이미지에서 특징을 추출할수있는 가중치들이 들어있는 필터의 개념을 도입
-제작된 필터를 이미지의 특정범위에 한정해서 합성곱 연산을 이용특성을 추출
-부분적으로 적용된 필터를 이동시켜가면서 필터가 적용된 이미지의 일부를 합성곱 연산 진행

padding
-필터를 이미지에 적용해서 특성 추출을 진행하면 Pooling층의 영향으로 이미지 크기가 줄어든다.
-필터의 크기로 인해 가장자리의 데이터가 부족하기 때문에 입력 이미지와 출력 이미지의 크기가 바뀌고
가장자리의 데이터가 충분하게 학습되지 못한다.
-이를 보완하기 위 데이터 테두리에 0을 채워서 테두리를 만들어주는 기능 : 패딩
축소 샘플링
1)Stride
-합성곱 연산을 수행할 때 필터를 얼마나 이동시키면서 특성을 추출할 것인가?
-기본값은 가로 / 세로 각각 1px씩 이동하며 특성을 추출하고 합성곱 연산을 수행
-이미지의 크기를 효과적으로 줄이기 위해서 2px / 3px 씩 건너뛰면서 합성곱 연산을 수행하는 방법


2)Pooling
-CNN에서 특성을 추출해서 다음 층으로 넘길때 모든 특성을 다음층으로 넘기지 않음
-일정 범위 내에서 가장큰값 / 평균값을 넘기는 방법을 사용
>max Pooling : 설정된 지역 내에서 가장 큰값을 다음 층으로 넘기는 방법
>average Pooling: 설정되 닞역내의 평균값을 다음층으로 넘기는 방법

Stride 주의점
1.Stride (픽셀의 이동범위 제어)는 가로 세로 이동 폭이 항상 동일해야한다.
가로 1 /세로 1 -> 허용
가로 3 /세로 3 -> 허용

=================================

가로 2 /세로 3 -> 불허

